WIP: Go言語研修振り返り

2018-12-21

飯沼 俊平
プロダクトエンジニアリング部 業務支援領域G
iinm@r.recruit.co.jp


* 受講の動機

- 普段の業務では、ライブラリを組み合わせて作ることが多い。自分が普段触れているよりも低いレイヤーでの不具合にも対応できるようになりたい。
- Go言語から（自分にとって）新しいパラダイムを学び、引き出しを増やしたい。
- fzf, direnv, filebeatなど、気がついたらGo言語で書かれたツールを使っていたこともあり、何が良いのか気になっていた。


* 何を学べたか？

特に発見が大きかったもの

- 数学の復習; 数学忘れてて辛かった。
- goroutine, channelを使った平行プログラミング: worker goroutineを複数作って平行度をコントロールしたり、競合が防ぐために状態管理を一つのgoroutineに閉じ込めて外界とはchannelでやり取りしたり…
- テスト: 表駆動のテスト ※ 業務でJavaのテストをSpock (Groovy)で書いているが、言語標準でこの表現ができるのは良いと思った。


* 活用

社内ISUCONはGo言語を選んだ: 前回のISUCONは普段使っているJavaで挑んだ結果ボロクソだったが、今回はまともな結果を出せた。（順位が、前から数えたほうが速くなった）

- 一つのgoroutineで大量にメッセージを配信している処理を、worker groutineで平行に処理するように書き換えるなど。
- Javaに比べてビルドが速く、改修のサイクルを多く回せた。

普段触っているJavaのアプリケーションを見直すきっかけになった。

- 9章の最後に書いてある「スレッドローカル領域の乱用」


* 感想・今後に向けて

感想

- 言語そのものにも発見が大きかったが、go doc, gofmt, vim-go など、開発環境周りが快適で実務でも使いたくなった。


今後に向けて

- 実際にWebアプリケーションを書いた経験が少ないので書く！
